name: github-actions-workflow
on:
  push:
    branches:
      - 'main'
      - 'master'
env:
  workflow-level-env-variable-1: "Test_Workflow"
  workflow-level-env-variable-2: "Build_Workflow"
jobs:
  test:
    runs-on: 'macos-latest'
    env: 
      test_env_1: "Hello Test Env 1."
      test_env_2: "Thank you. BYE."
    steps:
      - name: Get the code.
        uses: actions/checkout@v5
      - name: Install all the dependencies.
        run: npm install
      - name: Caching all the dependencies.
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/pacakge-lock.json') }}
      - name: Update all the dependencies with sanity.
        run: npm ci
      - name: Test the code.
        run: npm run test
      - name: Finish Test.
        run: echo "All the process under the Test job is successfully completed!"
      - name: Test Workflow Environment Variable.
        run: echo "${$workflow-level-env-variable-1 and $workflow-level-env-variable-2 }"
      - name: Test Job level Environment Variable.
        run: echo "${$env.test_env_1 and $env.test_env_2 }"
      - name: Test Step level Environment Variable.
        env:
          step-env-variable: 'Step env variable'
        run: echo "${{ step-env-variable }}"
  build:
    needs: test
    runs-on: 'macos-latest'
    outputs:
      build_job_output: ${{ steps.test_job_step.outputs.build_job_output }}
    steps:
      - id: test_job_step
        run: echo "my_output_name=build" >> "$GITHUB_OUTPUT"
      - name: Get the code.
        uses: actions/checkout@v5
      - name: Install Latest Version of NODE.
        uses: actions/setup-node@v4
        with:
          node-version: 23
      - name: Caching the dependencies.
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install all the dependencies.
        run: npm install
      - name: Update all the dependencies with sanity.
        run: npm ci
      - name: Build the code. 
        run: NODE_OPTIONS=--openssl-legacy-provider npm run build
      - name: Publish the JS filename
        # run: find dist/static/*.js -type f -execdir echo 'build_job_output={}' >> $GITHUB_OUTPUT ';'
        run: find build/static/js -type f -name "*.js" -print0 | xargs -0 echo "build_job_output=$(cat)" >> "$GITHUB_OUTPUT"
      - name: Upload the job artifacts of the project build.
        uses: actions/upload-artifact@v4
        with:
          name: expense-calculator-build-job-artifacts
          path: 
            build
      - name: Verify the files in the dist path
        run: ls
  deploy:
    needs: build
    runs-on: 'macos-latest'
    steps:
      - name: Download the job artifacts of the project build.
        uses: actions/upload-artifact@v4
        with:
          name: expense-calculator-build-job-artifacts
          path:
            build
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hiddeb-files: false
      - name: Output Contents
        run: ls
      - name: Output contents from the build job.
        run: echo "${{ needs.build.outputs.build_job_output }}"
      - name: Get the code.
        uses: actions/checkout@v5
      - name: Install Latest Version of NODE.
        uses: actions/setup-node@v4
        with:
          node-version: 23
      - name: Cache all the dependencies.
        uses: actions/cache@v4
        with: 
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install all the dependencies.
        run: npm install
      - name: Update all the dependencies with sanity.
        run: npm ci
      - name: Build the code. 
        run: NODE_OPTIONS=--openssl-legacy-provider npm run build
      - name: Deploy the application to the server.
        run: echo "Deployemnt Successfully Completed."