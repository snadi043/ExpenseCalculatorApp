{"version":3,"sources":["components/ExpenseDate.js","components/ExpenseItem.js","components/ExpensesList/ExpensesList.js","components/Filter/Filter.js","components/Charts/ChartBar.js","components/Charts/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses.js","components/Expenses/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseDate","props","date","toLocaleString","day","month","year","getFullYear","className","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","ExpensesList","items","length","map","expenses","id","Filter","value","selected","onChange","event","onFilterChange","target","ChartBar","fillValue","maxValue","Math","round","style","height","Chart","dataPointValues","dataPoints","dataPoint","totalMaximun","max","label","ExpensesChart","dataPointsChart","expense","getMonth","Expenses","filteredYear","setFilteredYear","FilteredExpenses","filter","toString","yearChange","ExpenseForm","EnteredTitle","setEnteredTitle","EnteredAmount","setEnteredAmount","EnteredDate","setEnteredDate","onSubmit","preventDefault","Date","onSaveExpenseData","type","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","expenseData","random","onAddExpense","Dummy_expenses","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a908ebd9.chunk.js","sourcesContent":["import './ExpenseDate.css';\n\nfunction ExpenseDate(props){\n    \n    const date = props.date.toLocaleString('en-US', {day: '2-digit'});\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\n    const year = props.date.getFullYear();\n\n    return(\n    <div className=\"expense-date\">\n    <div className=\"expense-date__day\">{date}</div>\n    <div className=\"expense-date__month \">{month}</div>\n    <div className=\"expense-date__year\">{year}</div>\n    </div>\n    )\n    \n  \n}\n\nexport default ExpenseDate;","import React, { useState } from 'react';\nimport \"./ExpenseItem.css\";\nimport './ExpenseDate';\nimport ExpenseDate from \"./ExpenseDate\";\n\nconst ExpenseItem = (props) => {\n\n    const [title, setTitle] = useState(props.title);\n    // function clickHandler(){\n\n    // }\n\n    const clickHandler = () => {\n        setTitle('UPDATED!...');\n        console.log('clicked!...')\n    }\n    \n\n    \n\n    return (\n      <li>\n      <div className=\"expense-item\">\n        <div className=\"expense-item__description\">\n           <ExpenseDate date={props.date}/>\n          <h2>{title}</h2>\n        </div>\n        <div className=\"expense-item__price\">${props.amount}</div>\n        <button onClick={clickHandler}>Click Here...</button>\n        </div>\n        </li>\n    );\n}\n\nexport default ExpenseItem;","import React from 'react';\nimport ExpenseItem from '../ExpenseItem';\nimport './ExpensesList.css';\n\nconst ExpensesList = (props) => {\n      \n    if (props.items.length === 0){\n        return <h2 className=\"expenses-list__fallback\">NO EXPENSES FOUND..</h2>\n        }\n\nreturn <ul className = \"expenses-list\">\n{props.items.map(\n    expenses => (\n  <ExpenseItem\n    key = { expenses.id}\n    title={expenses.title}\n    amount={expenses.amount}\n    date={expenses.date}\n    />\n    ))}\n    </ul>\n    \n\n}\n\nexport default ExpensesList;","import React from 'react';\nimport './Filter.css';\n\nconst Filter = (props) => {\n    const yearChangeHandler = (event) => {\n        props.onFilterChange(event.target.value);\n    }\n    return(\n        <div className='expenses-filter'>\n        <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={yearChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n    );\n\n}\nexport default Filter;","import React from 'react';\nimport './ChartBar.css'; \n\nconst ChartBar = (props) => {\n    let fillValue = '0%';\n\n    if(props.maxValue > 0){\n        fillValue = Math.round((props.value / props.maxValue) * 100) + '%';\n    }\n\n\nreturn (\n    <div className=\"chart-bar \">\n        <div className=\"chart-bar__inner\">\n            <div className=\"chart-bar__fill\" style={{height: fillValue}}>\n                {fillValue}\n            </div>\n            <div className=\"chart-bar__label\">\n\n            </div>\n        </div> \n\n\n    </div>\n)\n}\n\nexport default ChartBar;\n\n","import React from 'react';\nimport './Charts.css';\nimport ChartBar from './ChartBar';\n\nconst Chart = (props) => {\n\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximun = Math.max(...dataPointValues);\n    return(\n        <div className=\"chart\">\n            {props.dataPoints.map(dataPoints => \n            <ChartBar \n            key = {dataPoints.label}\n            value={dataPoints.value}\n            maxValue={totalMaximun} \n            label={dataPoints.label}/>)}\n        </div>\n        \n    );\n}\n\nexport default Chart;\n","import React from 'react';\nimport Chart from '../Charts/Chart';\n\nconst ExpensesChart = (props) => {\n    const dataPointsChart = [ \n        {value: 0, label:'Jan'},\n        {value: 0, label:'Feb'},\n        {value: 0, label:'Mar'},\n        {value: 0, label:'Apr'},\n        {value: 0, label:'May'},\n        {value: 0, label:'Jun'},\n        {value: 0, label:'Jul'},\n        {value: 0, label:'Aug'},\n        {value: 0, label:'Sep'},\n        {value: 0, label:'Oct'},\n        {value: 0, label:'Nov'},\n        {value: 0, label:'Dec'},\n\n    ]\n\n    for (const expense of props.expenses){\n        const expenseMonth = expense.date.getMonth();\n        dataPointsChart[expenseMonth].value += expense.amount; \n    }\n    return (\n        <div>\n            <Chart dataPoints = {dataPointsChart}/>\n        </div>\n    )\n}\n\nexport default ExpensesChart;","import React, { useState } from 'react';\nimport './Expenses.css';\nimport ExpensesList from './ExpensesList/ExpensesList';\nimport Filter from './Filter/Filter';\nimport ExpensesChart from './Expenses/ExpensesChart';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2022');\n  const filterChanged = (yearChange) => {\n    setFilteredYear(yearChange);\n \n  }\n    \n  const FilteredExpenses = props.items.filter(expenses => {\n    return expenses.date.getFullYear().toString() === filteredYear;\n  })\n  \n  \n    return(\n      <div>\n         <Filter \n         selected={filteredYear} \n         onFilterChange={filterChanged}/>\n          <ExpensesChart expenses={FilteredExpenses}/>\n        <ExpensesList items={FilteredExpenses}/>\n      </div>\n     \n       \n    );\n}\n\nexport default Expenses;","import React, { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n\n    const [EnteredTitle, setEnteredTitle] = useState('');\n    const [EnteredAmount, setEnteredAmount] = useState('');\n    const [EnteredDate, setEnteredDate] = useState('');\n\n    const changeTitleHandler = (event) => {\n        setEnteredTitle(event.target.value);      \n    }\n\n    const changeAmountHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    }\n    const changeDateHandler = (event) => {\n        setEnteredDate(event.target.value);\n    }\n    \n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const Expenses = {\n            title: EnteredTitle,\n            amount: EnteredAmount,\n            date: new Date(EnteredDate),\n        }\n        \n        props.onSaveExpenseData(Expenses);\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    }\n\n\n    \n    return (\n        <form onSubmit={submitHandler}>\n\n        <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n                <label className=\".new-expense__control label\">Title</label>\n                <input className=\".new-expense__control input\" value={EnteredTitle} onChange={changeTitleHandler} type=\"text\"/>\n            </div>\n            \n            <div className=\"new-expense__control\">\n                <label className=\".new-expense__control label\">Amount</label>\n                <input  className=\".new-expense__control input\" onChange={changeAmountHandler} value={EnteredAmount} type=\"number\" min=\"0.01\" step=\"0.01\"/>\n            </div>\n\n            <div className=\"new-expense__control\">\n                <label className=\".new-expense__control label\">Date</label>\n                <input className=\".new-expense__control input\" onChange={changeDateHandler} value={EnteredDate} type=\"date\" min=\"2019-01-01\" max=\"2020-12-31\"/>\n            </div>\n\n        </div>\n\n        <div className=\"new-expense__actions\">\n\n           <button type=\"submit\">Add Expense</button>\n           <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n       </div>\n        </form>\n    );\n        \n    }\n\nexport default ExpenseForm;","import React, {useState} from 'react';\nimport ExpenseForm from '../Expenses/ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n\n    const savedExpenseDataHandler = ( enteredExpenseData ) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString(),\n        }\n        props.onAddExpense(expenseData);\n        setIsEditing(false);\n    }\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler = () => {\n        setIsEditing(false);\n    }\n    return (\n    <div className=\"new-expense\">\n        {!isEditing && <button className=\"btn btn-primary\" onClick={startEditingHandler}> Add New Expense </button>}\n        {isEditing && <ExpenseForm onSaveExpenseData={savedExpenseDataHandler} onCancel={stopEditingHandler}/>}\n\n    </div>\n    );\n}\nexport default NewExpense;","\nimport './App.css';\nimport React, { useState } from 'react';\nimport Expenses from './components/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst Dummy_expenses = [\n  {\n   \n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n   \n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    \n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(Dummy_expenses);\n  \n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses]\n    });\n\n  }\n\n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense = {addExpenseHandler}/>\n      <Expenses items={expenses}/>\n    </div> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}